@page "/login"
@rendermode InteractiveServer
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<div class="container">
    <div class="row">
        <!-- Left column (50% width on medium+ screens) -->
        <div class="col-md-7 login-section d-flex flex-column align-items-start">
            <h2>Welcome Back!</h2>
            <p>Please log in to your account to continue.</p>
            <EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="email">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>

                <div class="mb-3">
                    <label for="password">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <button type="submit" class="btn btn-primary">Login</button>
            </EditForm>
        </div>

        <!-- Right column (50% width) -->
        <div class="col-md-5 signup-section d-flex flex-column align-items-end">
            <h2>Not A Member? Sign Up Now!</h2>
            <button type="button" class="btn btn-primary" @onclick="HandleSignUp">Sign Up</button>
        </div>
    </div>
    <img src="ut-logo.jpg" alt="University of Toledo Logo" class="ut-logo-login" />
</div>

@code {
    private LoginModel loginModel = new();

    private void HandleSignUp()
    {
        // Do your login logic here
        Console.WriteLine($"Navigating to sign up page...");

        // Redirect to sign up page
        Navigation.NavigateTo("/signup");
    }

    private void HandleValidSubmit()
    {
        // Do your login logic here
        Console.WriteLine($"Email: {loginModel.Email}, Password: {loginModel.Password}");
        
        // Redirect to dashboard after successful login [Finish]
        Navigation.NavigateTo("/dashboard");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Email is invalid.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = string.Empty;
    }
}